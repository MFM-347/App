name: Android CI
on:
  workflow_dispatch:
    inputs:
      name:
        description: "Release-Build"
        default: "Generate release build"
      testers:
        type: choice
        description: "Select testers"
        options:
          - android
          - internalTesters
          - everyone

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checking out branch
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: |
          mkdir -p app/../ks
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > app/../ks/keystore.jks

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Release apk
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew assembleRelease --stacktrace

      - name: Build Release bundle
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew bundleRelease --stacktrace

      - name: Get release file aab path
        id: releaseAab
        run: |
          aabfile=$(find app/build/outputs/bundle/release/*.aab)
          if [ -z "$aabfile" ]; then
            echo "No .aab file found!"
            exit 1
          fi
          echo "aabfile=$aabfile" >> $GITHUB_OUTPUT

      - name: Get release file apk path
        id: releaseApk
        run: |
          apkfile=$(find app/build/outputs/apk/release/*.apk)
          if [ -z "$apkfile" ]; then
            echo "No .apk file found!"
            exit 1
          fi
          echo "apkfile=$apkfile" >> $GITHUB_OUTPUT

      - name: Zip Files
        uses: papeloto/action-zip@v1
        with:
          files: ${{ steps.releaseAab.outputs.aabfile }} ${{ steps.releaseApk.outputs.apkfile }}
          dest: release-build.zip

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v3
        with:
           name: release-artifacts
           path: release-build.zip
